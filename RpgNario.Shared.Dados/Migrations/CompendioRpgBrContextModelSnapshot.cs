// <auto-generated />
using System;
using RpgNario.Banco;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace RpgNario.Shared.Dados.Migrations
{
    [DbContext(typeof(RpgNarioContext))]
    partial class RpgNarioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("RpgNario.Modelos.Editora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SiteOficial")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Editoras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Foto = "/FotosEditoras/Independente.jpg",
                            Nome = "Independente",
                            SiteOficial = "#",
                            Tipo = "Agregador"
                        },
                        new
                        {
                            Id = 2,
                            Foto = "/FotosEditoras/Jambo.jpg",
                            Nome = "Jambô",
                            SiteOficial = "https://jamboeditora.com.br",
                            Tipo = "Editora"
                        },
                        new
                        {
                            Id = 3,
                            Foto = "/FotosEditoras/Coisinha_Verde.jpg",
                            Nome = "Coisinha Verde",
                            SiteOficial = "https://coisinhaverde.com.br/jogos/",
                            Tipo = "Editora"
                        },
                        new
                        {
                            Id = 4,
                            Foto = "/FotosEditoras/New_Order.jpg",
                            Nome = "New Order",
                            SiteOficial = "https://newordereditora.com/",
                            Tipo = "Editora"
                        },
                        new
                        {
                            Id = 5,
                            Foto = "/FotosEditoras/Lampiao_Game_Studio.jpg",
                            Nome = "Lampião Game Studio",
                            SiteOficial = "https://lampiaogamestudio.wordpress.com/",
                            Tipo = "Estúdio Independente"
                        },
                        new
                        {
                            Id = 6,
                            Foto = "/FotosEditoras/101_Games.jpg",
                            Nome = "101 Games",
                            SiteOficial = "https://www.101games.com.br/",
                            Tipo = "Estúdio Independente"
                        },
                        new
                        {
                            Id = 7,
                            Foto = "/FotosEditoras/Buro.jpg",
                            Nome = "Buró",
                            SiteOficial = "https://www.burobrasil.com/",
                            Tipo = "Editora"
                        },
                        new
                        {
                            Id = 8,
                            Foto = "/FotosEditoras/Editora_Draco.jpg",
                            Nome = "Editora Draco",
                            SiteOficial = "https://editoradraco.com/",
                            Tipo = "Editora"
                        },
                        new
                        {
                            Id = 9,
                            Foto = "/FotosEditoras/Secular_Games.jpg",
                            Nome = "Secular Games",
                            SiteOficial = "https://www.seculargames.com.br/",
                            Tipo = "Coletivo de Autores Independentes"
                        });
                });

            modelBuilder.Entity("RpgNario.Modelos.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Generos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Magia, espadas, reinos, monstros, e aventuras em mundos inspirados na Idade Média.",
                            Nome = "Fantasia Medieval"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Exploração, desafios, perigos, recompensas.",
                            Nome = "Aventura"
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Magia, criaturas místicas, heróis épicos.",
                            Nome = "Fantasia"
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "Medo, mistério, ameaças sobrenaturais.",
                            Nome = "Terror"
                        },
                        new
                        {
                            Id = 5,
                            Descricao = "Magia oculta no mundo moderno.",
                            Nome = "Fantasia Urbana"
                        },
                        new
                        {
                            Id = 6,
                            Descricao = "Estilo visual marcante, ação exagerada, drama.",
                            Nome = "Anime"
                        },
                        new
                        {
                            Id = 7,
                            Descricao = "Regras clássicas, letalidade, minimalismo.",
                            Nome = "Old School"
                        },
                        new
                        {
                            Id = 8,
                            Descricao = "Faroeste, duelos, foras-da-lei, deserto.",
                            Nome = "Velho-Oeste"
                        },
                        new
                        {
                            Id = 9,
                            Descricao = "Futuro sombrio, neon, hackers, corporações.",
                            Nome = "Cyberpunk"
                        },
                        new
                        {
                            Id = 10,
                            Descricao = "Humor, situações absurdas, leveza.",
                            Nome = "Comédia"
                        },
                        new
                        {
                            Id = 11,
                            Descricao = "Aventuras individuais, narrativa pessoal.",
                            Nome = "Solo RPG"
                        },
                        new
                        {
                            Id = 12,
                            Descricao = "Mistérios, pistas, dedução, conspirações.",
                            Nome = "Investigativo"
                        },
                        new
                        {
                            Id = 13,
                            Descricao = "Tecnologia avançada, viagens espaciais.",
                            Nome = "Ficção Científica"
                        },
                        new
                        {
                            Id = 14,
                            Descricao = "Recursos escassos, perigo constante.",
                            Nome = "Sobrevivência"
                        });
                });

            modelBuilder.Entity("RpgNario.Modelos.Sistema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnoLancamento")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("EditoraId")
                        .HasColumnType("int");

                    b.Property<string>("Engine")
                        .HasColumnType("longtext");

                    b.Property<string>("Foto")
                        .HasColumnType("longtext");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EditoraId");

                    b.ToTable("Sistemas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnoLancamento = 2018,
                            Descricao = "Terceira edição do primeiro RPG criado por brasileiros. O cenário do Tagmar segue a linha Tolkieniana, ambientada em uma terra de fantásticas raças, poderosas criaturas e incríveis magias, com suas história, folclores e lendas.",
                            EditoraId = 1,
                            Engine = "Próprio",
                            Foto = "/FotosSistemas/Tagmar_3.jpg",
                            Link = "https://www.tagmar.com.br/",
                            Nome = "Tagmar 3"
                        },
                        new
                        {
                            Id = 2,
                            AnoLancamento = 2024,
                            Descricao = "RPG cyberpunk minimalista e premiado, focado em sessões únicas de assaltos de alta tecnologia em um futuro distópico.",
                            EditoraId = 1,
                            Engine = "Forged in the Dark",
                            Foto = "/FotosSistemas/CBR_PNK.jpg",
                            Link = "https://cabinetofcuriosities.games/",
                            Nome = "CBR+PNK"
                        },
                        new
                        {
                            Id = 3,
                            AnoLancamento = 2024,
                            Descricao = "RPG de horror que emula filmes slasher dos anos 80, onde jogadores interpretam arquétipos clássicos tentando sobreviver a um assassino implacável.",
                            EditoraId = 1,
                            Engine = "Próprio (d6)",
                            Foto = "/FotosSistemas/Brutal.jpg",
                            Link = "https://www.catarse.me/brutal",
                            Nome = "Brutal"
                        },
                        new
                        {
                            Id = 4,
                            AnoLancamento = 2020,
                            Descricao = "Dungeon crawler de fantasia sombria e horror, com foco em exploração de masmorras, gerenciamento de sanidade e recursos.",
                            EditoraId = 1,
                            Engine = "Híbrido (5e + OSR)",
                            Foto = "/FotosSistemas/Arcanas_e_Ancestrais.jpg",
                            Link = "https://clubedeautores.com.br/livro/arcanas-ancestrais",
                            Nome = "Arcanas & Ancestrais"
                        },
                        new
                        {
                            Id = 5,
                            AnoLancamento = 2021,
                            Descricao = "RPG de faroeste com regras simples e ágeis, inspirado em clássicos do cinema e jogos como Red Dead Redemption.",
                            EditoraId = 1,
                            Engine = "Próprio",
                            Foto = "/FotosSistemas/Som_das_Seis.jpg",
                            Link = "https://www.rpgplanet.com.br/produto/o-som-das-seis",
                            Nome = "Som das Seis"
                        },
                        new
                        {
                            Id = 6,
                            AnoLancamento = 2020,
                            Descricao = "RPG cooperativo ou solo, sem mestre, focado em jornadas narrativas por mundos misteriosos e interligados.",
                            EditoraId = 1,
                            Engine = "Próprio",
                            Foto = "/FotosSistemas/Nomades.jpg",
                            Link = "https://www.catarse.me/nomades",
                            Nome = "Nômades"
                        },
                        new
                        {
                            Id = 7,
                            AnoLancamento = 2021,
                            Descricao = "Sistema de regras genérico e versátil, com foco em narrativas rápidas e divertidas, notável por sua integração com o VTT Roll20.",
                            EditoraId = 1,
                            Engine = "Próprio",
                            Foto = "/FotosSistemas/Ludosystem.jpg",
                            Link = "https://ludosystem.itch.io/ludosystem-sistema-de-jogos-narrativos",
                            Nome = "Ludosystem"
                        },
                        new
                        {
                            Id = 8,
                            AnoLancamento = 2024,
                            Descricao = "RPG onde crianças transformam seus medos em aventuras, explorando um mundo de fantasia e coragem.",
                            EditoraId = 1,
                            Engine = "Próprio",
                            Foto = "/FotosSistemas/O_Mundo_Secreto.jpg",
                            Link = "https://www.catarse.me/OMundoSecretoRPG",
                            Nome = "O Mundo Secreto"
                        },
                        new
                        {
                            Id = 9,
                            AnoLancamento = 2019,
                            Descricao = "A mais recente edição do maior cenário de fantasia medieval do Brasil, com um sistema de regras robusto e um vasto mundo para explorar.",
                            EditoraId = 2,
                            Engine = "Próprio (d20)",
                            Foto = "/FotosSistemas/Tormenta20.jpg",
                            Link = "https://jamboeditora.com.br/produto/tormenta20-edicao-jogo-do-ano/",
                            Nome = "Tormenta20"
                        },
                        new
                        {
                            Id = 10,
                            AnoLancamento = 2022,
                            Descricao = "Baseado na websérie de sucesso, este RPG coloca os jogadores como agentes de uma organização que investiga e combate o paranormal.",
                            EditoraId = 2,
                            Engine = "Próprio",
                            Foto = "/FotosSistemas/Ordem_Paranormal.jpg",
                            Link = "https://jamboeditora.com.br/produto/ordem-paranormal-rpg/",
                            Nome = "Ordem Paranormal RPG"
                        },
                        new
                        {
                            Id = 11,
                            AnoLancamento = 2015,
                            Descricao = "Sistema rápido e divertido, ideal para aventuras inspiradas em animes e videogames, com criação de personagens baseada em pontos.",
                            EditoraId = 2,
                            Engine = "3D&T",
                            Foto = "/FotosSistemas/3D_T_Alpha.jpg",
                            Link = "https://jamboeditora.com.br/produto/3dt-alpha-edicao-revisada/",
                            Nome = "3D&T Alpha"
                        },
                        new
                        {
                            Id = 12,
                            AnoLancamento = 2022,
                            Descricao = "RPG de mesa que pode ser jogado em grupo ou solo, sem necessidade de mestre, em um mundo de fantasia com exploração e aventura.",
                            EditoraId = 3,
                            Engine = "Próprio (d6)",
                            Foto = "/FotosSistemas/Altaris_RPG.jpg",
                            Link = "https://coisinhaverde.com.br/jogos/portfolio-item/altaris-rpg/",
                            Nome = "Altaris RPG"
                        },
                        new
                        {
                            Id = 13,
                            AnoLancamento = 2020,
                            Descricao = "Jogo solo ou cooperativo sem mestre, onde os jogadores são gatos ladrões em uma cidade cheia de intrigas e facções rivais.",
                            EditoraId = 3,
                            Engine = "PbtA",
                            Foto = "/FotosSistemas/Gatunos.jpg",
                            Link = "https://coisinhaverde.com.br/jogos/portfolio-item/gatunos/",
                            Nome = "Gatunos"
                        },
                        new
                        {
                            Id = 14,
                            AnoLancamento = 2019,
                            Descricao = "Jogo narrativo solo sobre a jornada de um andarilho em busca de redenção no Japão Feudal.",
                            EditoraId = 3,
                            Engine = "Próprio",
                            Foto = "/FotosSistemas/Ronin.jpg",
                            Link = "https://coisinhaverde.com.br/jogos/portfolio-item/ronin/",
                            Nome = "Ronin"
                        },
                        new
                        {
                            Id = 15,
                            AnoLancamento = 2022,
                            Descricao = "A sexta edição do clássico RPG que mistura cyberpunk e fantasia, onde tecnologia e magia coexistem em um futuro distópico.",
                            EditoraId = 4,
                            Engine = "Shadowrun 6e",
                            Foto = "/FotosSistemas/Shadowrun_6e.jpg",
                            Link = "https://newordereditora.com/loja/rpg/shadowrun-sexto-mundo/shadowrun-sexto-mundo-livro-basico/",
                            Nome = "Shadowrun: Sexto Mundo"
                        },
                        new
                        {
                            Id = 16,
                            AnoLancamento = 2018,
                            Descricao = "RPG de fantasia científica no espaço, onde os jogadores exploram planetas exóticos, naves espaciais e mistérios cósmicos.",
                            EditoraId = 4,
                            Engine = "d20 (Pathfinder)",
                            Foto = "/FotosSistemas/Starfinder.jpg",
                            Link = "https://newordereditora.com/loja/rpg/starfinder/starfinder-livro-basico/",
                            Nome = "Starfinder"
                        },
                        new
                        {
                            Id = 17,
                            AnoLancamento = 2016,
                            Descricao = "Jogo que utiliza o Cypher System, onde os personagens viajam para realidades alternativas baseadas em mitos e ficção.",
                            EditoraId = 4,
                            Engine = "Cypher System",
                            Foto = "/FotosSistemas/The_Strange.jpg",
                            Link = "https://newordereditora.com/loja/rpg/the-strange/the-strange-livro-basico/",
                            Nome = "The Strange"
                        },
                        new
                        {
                            Id = 18,
                            AnoLancamento = 2018,
                            Descricao = "Jogo de investigação sobrenatural onde os jogadores são agentes de uma agência que lida com fenômenos estranhos.",
                            EditoraId = 5,
                            Engine = "L'Aventure",
                            Foto = "/FotosSistemas/Arquivos_Paranormais.jpg",
                            Link = "https://lampiaogamestudio.wordpress.com/em-destaque/arquivos-paranormais/",
                            Nome = "Arquivos Paranormais"
                        },
                        new
                        {
                            Id = 19,
                            AnoLancamento = 2018,
                            Descricao = "RPG sobre assassinos profissionais que devem planejar e executar seus alvos, lidando com os conflitos morais de sua profissão.",
                            EditoraId = 5,
                            Engine = "L'Aventure",
                            Foto = "/FotosSistemas/Ceifadores.jpg",
                            Link = "https://loja.movimentorpg.com.br/produto/ceifadores/",
                            Nome = "Ceifadores"
                        },
                        new
                        {
                            Id = 20,
                            AnoLancamento = 2022,
                            Descricao = "Jogo narrativo sobre estudantes que viajam entre o mundo real e uma realidade paralela para resolver conflitos.",
                            EditoraId = 5,
                            Engine = "Próprio",
                            Foto = "/FotosSistemas/Licoes.jpg",
                            Link = "https://lampiaogamestudio.wordpress.com/em-destaque/licoes-historias-entre-mundos/",
                            Nome = "Lições"
                        },
                        new
                        {
                            Id = 21,
                            AnoLancamento = 2021,
                            Descricao = "RPG no mundo de Conan, o Bárbaro, que pode ser jogado solo, em grupo cooperativo ou com um mestre tradicional.",
                            EditoraId = 6,
                            Engine = "Solo 10",
                            Foto = "/FotosSistemas/Aventuras_Era_Hiboriana.jpg",
                            Link = "https://www.101games.com.br/product-page/aventuras-na-era-hiboriana-rpg",
                            Nome = "Aventuras na Era Hiboriana"
                        },
                        new
                        {
                            Id = 22,
                            AnoLancamento = 2020,
                            Descricao = "Jogo de sobrevivência em um mundo pós-apocalíptico destruído pelo despertar dos Grandes Antigos.",
                            EditoraId = 6,
                            Engine = "Solo 10",
                            Foto = "/FotosSistemas/Heranca_de_Cthulhu.jpg",
                            Link = "https://www.101games.com.br/product-page/a-heran%C3%A7a-de-cthulhu-pdf",
                            Nome = "A Herança de Cthulhu"
                        },
                        new
                        {
                            Id = 23,
                            AnoLancamento = 2020,
                            Descricao = "RPG solo onde o jogador interpreta um vampiro lutando para sobreviver em um mundo hostil.",
                            EditoraId = 6,
                            Engine = "Solo 10",
                            Foto = "/FotosSistemas/Vampiro_Sozinho_Escuridao.jpg",
                            Link = "https://www.101games.com.br/product-page/vampiro-sozinho-na-escurid%C3%A3o-pdf",
                            Nome = "Vampiro: Sozinho na Escuridão"
                        },
                        new
                        {
                            Id = 24,
                            AnoLancamento = 2022,
                            Descricao = "A segunda edição do popular retro-clone brasileiro, que busca emular a experiência dos RPGs clássicos com regras modernizadas.",
                            EditoraId = 7,
                            Engine = "OSR (d20)",
                            Foto = "/FotosSistemas/Old_Dragon_2.jpg",
                            Link = "https://burobrasil.com/old-dragon-2/",
                            Nome = "Old Dragon 2"
                        },
                        new
                        {
                            Id = 25,
                            AnoLancamento = 2020,
                            Descricao = "Aventura e exploração espacial no estilo pulp, usando as regras simples de Old Dragon para viagens interplanetárias.",
                            EditoraId = 7,
                            Engine = "Old Dragon",
                            Foto = "/FotosSistemas/Space_Dragon.jpg",
                            Link = "https://burobrasil.com/space-dragon/",
                            Nome = "Space Dragon"
                        },
                        new
                        {
                            Id = 26,
                            AnoLancamento = 2020,
                            Descricao = "Reboot do aclamado RPG de horror contemporâneo, onde a realidade é uma ilusão que esconde um inferno eterno.",
                            EditoraId = 7,
                            Engine = "PbtA",
                            Foto = "/FotosSistemas/Kult_Divindade_Perdida.jpg",
                            Link = "https://www.burobrasil.com/produtos/kult/",
                            Nome = "Kult: Divindade Perdida"
                        },
                        new
                        {
                            Id = 27,
                            AnoLancamento = 2023,
                            Descricao = "RPG pós-apocalíptico com humor e surrealismo, inspirado na cultura brasileira e em JRPGs clássicos.",
                            EditoraId = 8,
                            Engine = "Próprio (2d6)",
                            Foto = "/FotosSistemas/Brave_Zenith.jpg",
                            Link = "https://editoradraco.com/produto/brave-zenith/",
                            Nome = "Brave Zenith"
                        },
                        new
                        {
                            Id = 28,
                            AnoLancamento = 2019,
                            Descricao = "O jogo que originou o motor PbtA, focado na sobrevivência e nas relações em um mundo pós-apocalíptico.",
                            EditoraId = 9,
                            Engine = "PbtA",
                            Foto = "/FotosSistemas/Apocalypse_World.jpg",
                            Link = "https://seculargames.com.br/loja/index.php/produto/apocalypse-world/",
                            Nome = "Apocalypse World"
                        },
                        new
                        {
                            Id = 29,
                            AnoLancamento = 2017,
                            Descricao = "RPG de fantasia que combina a pegada dos jogos clássicos com regras modernas e narrativas, usando o sistema PbtA.",
                            EditoraId = 9,
                            Engine = "PbtA",
                            Foto = "/FotosSistemas/Dungeon_World.jpg",
                            Link = "https://seculargames.com.br/loja/index.php/produto/dungeon-world/",
                            Nome = "Dungeon World"
                        },
                        new
                        {
                            Id = 30,
                            AnoLancamento = 2018,
                            Descricao = "Jogo de aventura, ação e mistério ambientado nos anos 20, com uma pegada pulp e investigativa.",
                            EditoraId = 9,
                            Engine = "Queen System",
                            Foto = "/FotosSistemas/Goddess_Save_the_Queen.jpg",
                            Link = "https://seculargames.com.br/loja/index.php/produto/goddess-save-the-queen-pdf/",
                            Nome = "Goddess Save the Queen"
                        });
                });

            modelBuilder.Entity("RpgNario.Shared.Dados.Modelos.PerfilDeAcesso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("RpgNario.Shared.Dados.Modelos.PessoaComAcesso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("GeneroSistema", b =>
                {
                    b.Property<int>("GenerosId")
                        .HasColumnType("int");

                    b.Property<int>("SistemasId")
                        .HasColumnType("int");

                    b.HasKey("GenerosId", "SistemasId");

                    b.HasIndex("SistemasId");

                    b.ToTable("GeneroSistema");

                    b.HasData(
                        new
                        {
                            GenerosId = 1,
                            SistemasId = 1
                        },
                        new
                        {
                            GenerosId = 2,
                            SistemasId = 1
                        },
                        new
                        {
                            GenerosId = 3,
                            SistemasId = 1
                        },
                        new
                        {
                            GenerosId = 9,
                            SistemasId = 2
                        },
                        new
                        {
                            GenerosId = 13,
                            SistemasId = 2
                        },
                        new
                        {
                            GenerosId = 4,
                            SistemasId = 3
                        },
                        new
                        {
                            GenerosId = 14,
                            SistemasId = 3
                        },
                        new
                        {
                            GenerosId = 3,
                            SistemasId = 4
                        },
                        new
                        {
                            GenerosId = 4,
                            SistemasId = 4
                        },
                        new
                        {
                            GenerosId = 7,
                            SistemasId = 4
                        },
                        new
                        {
                            GenerosId = 2,
                            SistemasId = 4
                        },
                        new
                        {
                            GenerosId = 8,
                            SistemasId = 5
                        },
                        new
                        {
                            GenerosId = 2,
                            SistemasId = 5
                        },
                        new
                        {
                            GenerosId = 2,
                            SistemasId = 6
                        },
                        new
                        {
                            GenerosId = 3,
                            SistemasId = 6
                        },
                        new
                        {
                            GenerosId = 11,
                            SistemasId = 6
                        },
                        new
                        {
                            GenerosId = 2,
                            SistemasId = 7
                        },
                        new
                        {
                            GenerosId = 2,
                            SistemasId = 8
                        },
                        new
                        {
                            GenerosId = 3,
                            SistemasId = 8
                        },
                        new
                        {
                            GenerosId = 1,
                            SistemasId = 9
                        },
                        new
                        {
                            GenerosId = 2,
                            SistemasId = 9
                        },
                        new
                        {
                            GenerosId = 3,
                            SistemasId = 9
                        },
                        new
                        {
                            GenerosId = 4,
                            SistemasId = 10
                        },
                        new
                        {
                            GenerosId = 12,
                            SistemasId = 10
                        },
                        new
                        {
                            GenerosId = 5,
                            SistemasId = 10
                        },
                        new
                        {
                            GenerosId = 6,
                            SistemasId = 11
                        },
                        new
                        {
                            GenerosId = 2,
                            SistemasId = 11
                        },
                        new
                        {
                            GenerosId = 10,
                            SistemasId = 11
                        },
                        new
                        {
                            GenerosId = 3,
                            SistemasId = 12
                        },
                        new
                        {
                            GenerosId = 2,
                            SistemasId = 12
                        },
                        new
                        {
                            GenerosId = 11,
                            SistemasId = 12
                        },
                        new
                        {
                            GenerosId = 2,
                            SistemasId = 13
                        },
                        new
                        {
                            GenerosId = 3,
                            SistemasId = 13
                        },
                        new
                        {
                            GenerosId = 11,
                            SistemasId = 13
                        },
                        new
                        {
                            GenerosId = 2,
                            SistemasId = 14
                        },
                        new
                        {
                            GenerosId = 11,
                            SistemasId = 14
                        },
                        new
                        {
                            GenerosId = 9,
                            SistemasId = 15
                        },
                        new
                        {
                            GenerosId = 3,
                            SistemasId = 15
                        },
                        new
                        {
                            GenerosId = 13,
                            SistemasId = 15
                        },
                        new
                        {
                            GenerosId = 13,
                            SistemasId = 16
                        },
                        new
                        {
                            GenerosId = 2,
                            SistemasId = 16
                        },
                        new
                        {
                            GenerosId = 3,
                            SistemasId = 16
                        },
                        new
                        {
                            GenerosId = 13,
                            SistemasId = 17
                        },
                        new
                        {
                            GenerosId = 3,
                            SistemasId = 17
                        },
                        new
                        {
                            GenerosId = 2,
                            SistemasId = 17
                        },
                        new
                        {
                            GenerosId = 12,
                            SistemasId = 18
                        },
                        new
                        {
                            GenerosId = 4,
                            SistemasId = 18
                        },
                        new
                        {
                            GenerosId = 5,
                            SistemasId = 18
                        },
                        new
                        {
                            GenerosId = 12,
                            SistemasId = 19
                        },
                        new
                        {
                            GenerosId = 2,
                            SistemasId = 19
                        },
                        new
                        {
                            GenerosId = 3,
                            SistemasId = 20
                        },
                        new
                        {
                            GenerosId = 2,
                            SistemasId = 20
                        },
                        new
                        {
                            GenerosId = 1,
                            SistemasId = 21
                        },
                        new
                        {
                            GenerosId = 2,
                            SistemasId = 21
                        },
                        new
                        {
                            GenerosId = 14,
                            SistemasId = 21
                        },
                        new
                        {
                            GenerosId = 4,
                            SistemasId = 22
                        },
                        new
                        {
                            GenerosId = 14,
                            SistemasId = 22
                        },
                        new
                        {
                            GenerosId = 13,
                            SistemasId = 22
                        },
                        new
                        {
                            GenerosId = 4,
                            SistemasId = 23
                        },
                        new
                        {
                            GenerosId = 5,
                            SistemasId = 23
                        },
                        new
                        {
                            GenerosId = 11,
                            SistemasId = 23
                        },
                        new
                        {
                            GenerosId = 1,
                            SistemasId = 24
                        },
                        new
                        {
                            GenerosId = 7,
                            SistemasId = 24
                        },
                        new
                        {
                            GenerosId = 2,
                            SistemasId = 24
                        },
                        new
                        {
                            GenerosId = 13,
                            SistemasId = 25
                        },
                        new
                        {
                            GenerosId = 2,
                            SistemasId = 25
                        },
                        new
                        {
                            GenerosId = 4,
                            SistemasId = 26
                        },
                        new
                        {
                            GenerosId = 5,
                            SistemasId = 26
                        },
                        new
                        {
                            GenerosId = 12,
                            SistemasId = 26
                        },
                        new
                        {
                            GenerosId = 3,
                            SistemasId = 27
                        },
                        new
                        {
                            GenerosId = 2,
                            SistemasId = 27
                        },
                        new
                        {
                            GenerosId = 10,
                            SistemasId = 27
                        },
                        new
                        {
                            GenerosId = 13,
                            SistemasId = 28
                        },
                        new
                        {
                            GenerosId = 14,
                            SistemasId = 28
                        },
                        new
                        {
                            GenerosId = 2,
                            SistemasId = 28
                        },
                        new
                        {
                            GenerosId = 1,
                            SistemasId = 29
                        },
                        new
                        {
                            GenerosId = 2,
                            SistemasId = 29
                        },
                        new
                        {
                            GenerosId = 7,
                            SistemasId = 29
                        },
                        new
                        {
                            GenerosId = 2,
                            SistemasId = 30
                        },
                        new
                        {
                            GenerosId = 12,
                            SistemasId = 30
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("RpgNario.Modelos.Sistema", b =>
                {
                    b.HasOne("RpgNario.Modelos.Editora", "Editora")
                        .WithMany()
                        .HasForeignKey("EditoraId");

                    b.Navigation("Editora");
                });

            modelBuilder.Entity("GeneroSistema", b =>
                {
                    b.HasOne("RpgNario.Modelos.Genero", null)
                        .WithMany()
                        .HasForeignKey("GenerosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RpgNario.Modelos.Sistema", null)
                        .WithMany()
                        .HasForeignKey("SistemasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("RpgNario.Shared.Dados.Modelos.PerfilDeAcesso", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("RpgNario.Shared.Dados.Modelos.PessoaComAcesso", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("RpgNario.Shared.Dados.Modelos.PessoaComAcesso", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("RpgNario.Shared.Dados.Modelos.PerfilDeAcesso", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RpgNario.Shared.Dados.Modelos.PessoaComAcesso", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("RpgNario.Shared.Dados.Modelos.PessoaComAcesso", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
